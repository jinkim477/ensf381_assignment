{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000'; // Adjust this URL to match your backend's base URL\n\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/register`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/signin`, userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","loginUser"],"sources":["/Users/jinkim/Documents/school/second_year/ensf381/assignments/ensf381_assignment/Assignment 04/my-ecommerce-app/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:3000'; // Adjust this URL to match your backend's base URL\n\nexport const registerUser = async (userData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/login/register`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};\n\nexport const loginUser = async (userData) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/login/signin`, userData);\n        return response.data;\n    } catch (error) {\n        throw error.response.data;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,YAAa,iBAAgB,EAAEE,QAAQ,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOL,QAAQ,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,YAAa,eAAc,EAAEE,QAAQ,CAAC;IAC3E,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}